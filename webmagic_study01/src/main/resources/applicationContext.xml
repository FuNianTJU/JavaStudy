<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 配置注解扫描 -->
	<context:component-scan base-package="com.yan"></context:component-scan>
	<!-- 加载多个配置文件 -->
	<bean id="PropertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
	    <property name="order" value="1" />  
	    <property name="ignoreUnresolvablePlaceholders" value="true" />  
	    <property name="locations">  
	      <list> 
	        <!--读取src目录的db.properties文件--> 
	        <value>classpath:db.properties</value> 
	        <!--读取src目录的redis.properties文件-->  
	        <value>classpath:redis.properties</value>  
	      </list>  
	    </property>  
	</bean>
	
	<!-- 数据库连接池 -->
	<!-- <context:property-placeholder location="classpath:/db.properties"/> -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- Mybatis的工厂 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 核心配置文件的位置 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
	</bean>

	<!-- Mapper动态代理开发   扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 基本包 -->
		<property name="basePackage" value="com.yan.dao"/>
	</bean>
	
	<!-- 注解事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- redis数据源 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
 
    <!-- redis连接池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy"  depends-on="poolConfig">
        <constructor-arg name="poolConfig" ref="poolConfig" /> <!-- 加载jedisPool配置信息 -->
        <constructor-arg name="host" value="${redis.host}" /><!-- redis主机地址 -->
        <constructor-arg name="port" value="${redis.port}"/> <!-- redis连接端口 -->
        <!-- <constructor-arg name="password" value="${redis.pass}"/> 密码 -->
        <!--<constructor-arg name="database" value="${redis.database}"/> 数据库 -->
        <!--<constructor-arg name="timeout" value="${redis.timeout}"/> 连接超时 -->
    </bean>
	

</beans>























